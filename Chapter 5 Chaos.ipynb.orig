{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Chaos\n",
    "Notebook to explore Ch. 5\n",
    "\n",
    "We are investigating the behavior or the driven, damped pendulum (DPP), which is a non-linear DE.\n",
    "\n",
    "First, investigate how the behavior changes as drive strength increased.\n",
    "\n",
    "1. start wd=2*pi, w_0=1.5*wd, beta=w_0/4, and theta_0 and v_theta_0 = 0.\n",
    "\n",
    "2. Plot theta for gamma=0.2 for t from 0 to 10.  What's the period of the motion? Is this related to wd or w_0 or something else? What's the amplitude?  Sketch a picture on the whiteboard showing the range of motion of the pendulum.\n",
    "\n",
    "3. Plot theta for gamma=0.9 for t from 0 to 10.  What's the period of the motion? Is this related to wd or w_0 or something else? What's the amplitude?  Sketch a picture on the whiteboard showing the range of motion of the pendulum.  To see that the behavior is actualy different now, focus on one oscillation after t=5.  Add to the plot a proper sin function.  Adjust the amplitude so it matches that of the pendulum.  What to you conclude?\n",
    "\n",
    "4. Plot theta for gamma=1.06 for t from 0 to 15. Sketch a picture on the whiteboard showing the range of motion of the pendulum and describe its motion for t= 0 to 5.\n",
    "\n",
    "5. A useful technique for checking if a motion is periodic is to get the value of theta for a series of times separated by the period.  Create a funciton to do this.  It should take as inputs the theta data and the period and it should return an array of theta values.  Use your function to test the data for gamma=1.06 for times greater than 30.  What do you find?\n",
    "\n",
    "6. Plot theta for gamma=1.073 for t from 0 to 60. Interpret the motion of the pendulum.  Use the zoom tools to zoom in bottom of the oscillatory part of your graph.  Focus on times after t=30.  Describe what you see.\n",
    "\n",
    "7. Use your period checking function to test the values of theta for gamma=1.073, for t>30.  What are these values telling you about the graph?\n",
    "\n",
    "8. Plot theta for gamma=1.077 for t from 0 to 60. Interpret the motion of the pendulum.  Use the zoom tools to zoom in bottom of the oscillatory part of your graph.  Focus on times after t=30.  Describe what you see.\n",
    "\n",
    "9. Use your period checking function to test the values of theta for gamma=1.077, for t>30.  What are these values telling you about the graph?\n",
    "\n",
    "10. Now we want to see what happens if we change the initial conditions, without changing anything else.  Still using γ=1.077, set the initial conditions so that theta_0=-pi/2 and v_theta_0=0.  Plot both solutions on the same graph.  Make sure both plots are for γ=1.077.\n",
<<<<<<< HEAD
    "\n",
    "11. Using the new initial conditions, run through the period-doubling cascade using gamma=1.06, 1.078, 1.081, 1.0826.  Finally, try γ=1.105.  Convince yourself that this graph doesn’t repeat exactly.  This is an example of chaos."
=======
    "11. Using the new initial conditions, run through the period-doubling cascade using gamma=1.06, 1.078, 1.081, 1.0826.  Finally, try γ=1.105.  Convince yourself that this graph doesn’t repeat exactly.  This is an example of chaos.\n",
    "12. Go back to conditions for (1) and plot velocity vs angle.  This is called a phase space plot.  Compare to your angle vs. t graph.  What is it telling you?\n"
>>>>>>> b919082f58874acffc6dcd399b6f5b74c488c230
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Populating the interactive namespace from numpy and matplotlib\n"
     ]
    }
   ],
   "source": [
    "# import pylab, set graph outputs to separate window, so we can use zoom tools\n",
    "# On PC's, this is probably enough:\n",
    "# %pylab\n",
    "# On Macs, you may need to do this:\n",
    "%pylab osx\n",
    "from scipy.integrate import odeint"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "def DrivenDampedPendulum(state, timep, betap, w_0, gammap, wd):\n",
    "    \"\"\"\n",
    "    Function to return derivatives for driven, damped harmonic oscillator.\n",
    "    theta_dot_dot = 2*beta*theta_dot - (w_0)**2 sin(theta) + gamma*cos(wd*t)\n",
    "    calling routine must pass w_0, beta, gamma, and drive frequency wd\n",
    "    \"\"\"\n",
    "    xdot=state[1]\n",
    "#    vdot=-((w_0)**2)*sin(state[0])-2*(betap)*state[1]+(gammap)*cos(wd*time)\n",
    "\n",
    "    vdot=-((w_0)**2)*sin(state[0])-2*(betap)*state[1]+(gammap)*(w_0**2)*cos(wd*timep)\n",
    "\n",
    "    return array([xdot,vdot])"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< HEAD
   "execution_count": 23,
=======
   "execution_count": 112,
>>>>>>> b919082f58874acffc6dcd399b6f5b74c488c230
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(0, 15)"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Explore behavior of DDP, driven damped pendulum\n",
    "\n",
    "wd=2*pi  # set drive freq to 2*pi, so that time is in units of drive period T\n",
    "w_0=1.5*wd  # set natural freq to 1.5 times drive freq, so that drive is close (but lower than) resonance\n",
    "beta = w_0/4\n",
    "theta_0=0.0  # initial angle is zero\n",
    "v_theta_0 = 0.0  # initial velocity is zero\n",
<<<<<<< HEAD
    "gamma=1.06\n",
=======
    "gamma=0.2\n",
>>>>>>> b919082f58874acffc6dcd399b6f5b74c488c230
    "\n",
    "t_max=100\n",
    "N=10000\n",
    "# fill time array\n",
    "time=linspace(0,t_max,N)\n",
    "\n",
    "# call odeint\n",
    "solution=odeint(DrivenDampedPendulum, [theta_0,v_theta_0], time, args=(beta, w_0, gamma, wd))\n",
    "# print(solution)\n",
    "\n",
    "figure()\n",
<<<<<<< HEAD
    "#plot(time,solution[:,0]/(2*pi),\"k-\")\n",
    "plot(time,solution[:,0]/(2*pi),\"k-\")\n",
    "plot(time, 0.5*sin(wd*time-1*pi/16))\n",
=======
    "plot(time,solution[:,0]/(2*pi),\"k-\")\n",
    "#plot(time,solution[:,0]/(2*pi),\"k-\", time, 2.5*sin(wd*time-1*pi/16))\n",
>>>>>>> b919082f58874acffc6dcd399b6f5b74c488c230
    "xlabel(\"time (drive periods)\")\n",
    "ylabel(\"angle\")\n",
    "xlim(0,15)\n",
    "#ylim(-1,1)\n",
    "#xlim(5,6)\n",
    "#xlim(40,50)\n",
    "# Change tick interval to pi/2\n",
    "#ax1=gca()\n",
    "#start, end = ax1.get_ylim()\n",
    "#ax1.set_yticks(np.arange(start, end, pi/2))"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< HEAD
=======
   "execution_count": 114,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "# function to return text formating for tick label\n",
    "# in units of of pi_fraction*pi.  Seems to work for pi_fraction both less than and greater than 1 \n",
    "# (eg. 1/4pi or 2pi)\n",
    "# requires matplotlib.ticker\n",
    "\n",
    "\n",
    "\n",
    "def fractions_of_pi(x,pos):\n",
    "    if np.isclose(x/(pi_fraction*pi)%(1./(pi_fraction)),0.):\n",
    "        # x is an integer, so just return that\n",
    "        if x==0:\n",
    "#            print(\"x is zero!!!\")\n",
    "            return 0\n",
    "        else:\n",
    "#            print(\"x is an integer !!!!\")\n",
    "            return r'${:.0f} \\pi$'.format(x/(pi))\n",
    "    else:\n",
    "        # this returns a latex formatted fraction\n",
    "        # Could check if fraction can be reduced\n",
    "        # if (1./pi_fraction)%(x/(pi_fraction*pi)) is close to zero, then it can\n",
    "        return '$\\\\frac{{{:2.0f}}}{{{:2.0f}}} \\pi$'.format(x/(pi_fraction*pi),1./pi_fraction)\n",
    "        # if you don't want to use latex, you could use this commented\n",
    "        # line, which formats the fraction as \"1/13\"\n",
    "        ### return '{:2.0f}/{:2.0f}'.format(x/step,1./step)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 157,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\nL18edL/p6elh27ZtuDvPP/98lNwfeOABIF7b9Pb2MmfOHJYuXRrsGUnw61ne8fFxnnvuueCFS09P\nD/feey9AtPi9vb0sWLCABQsWMHv27KDxRUREaolmjAIqXjUOwhZGkCtenn322SgD0AULFmBm7N69\nO8oAdPXq1WzZsmViAB16EHfaaaexefPmKLkvXLiQo0ePsmfPnuhtE2OAm2+bGPvN/PnzaW5uZufO\nndFyzxfUMfLPt32M3OfNm0d7ezsvvPBClNzzf1cg2jEVq21ERERqjQqjgIoXAMhf8hbyafFr1qzh\nqaee4tlnnw0+UDEzVq9ezebNm9m6dSunnHJK0PirV69m06ZN7Nixg7lz5wZdnQvg9NNPZ/PmzTzz\nzDOcfPLJQWMXts3TTz8dPP7pp5/Opk2b2L17N42NjUEfTlsYP0buxfFD7zf52P39/YyNjQU90ZCP\nn/+7hs49H3/Tpk1Rjql87IGBAQYHB1myZEnQ+GeccUa0v6uIiEit0aV0ARVfSrdv3z66urqCXra0\nZs0annzySUZHR3n5y18eLG7eWWedxf3338+mTZs4++yzg8ZesWIF+/fv56677uLcc88NGhtg7dq1\nfO9732Pfvn286lWvihJ/48aNPPLII5xzzjlBY/f09DA8PMydd94ZrW1uvfVWhoaGOO+886LEf+SR\nR3j44YdZt25d0Nj5G/7vuOMO1q1bF/QSScgdUzfffDPuHq3tH3vssSht093dTWtrK7fddhtnn312\n0M8ayLXNDTfcQFtbW5S2ERERqSWaMQqo+FK60JfRAZx33nncf//9/OIXv+AVr3hF0NgAr33ta7nu\nuutYvXp10GfRQO6BlK9+9av55Cc/yfnnnx80NsBFF13EQw89xL333hsl/sUXX8wXvvAFFi9eHGxB\njTwz4zWveQ0f//jHo+S+fv16Nm7cyA9/+MMohdGGDRv40pe+REdHR/CVy8yMDRs28IlPfCJK7hde\neCFPPPEEd911V5T4F198MV/+8pdpbm4OurBDYfxYbXP++eezZcsW7rzzziifNyIiIrVEhVFA+VXR\n8s9EefHFF4MPhNavXx/t7DPApZdeSkNDA9dcc03w2ACXX345W7Zs4W1ve1vw2O3t7axfv56xsTHO\nPPPM4PEvvfRStm7dyhVXXBE8NsAVV1zB1q1befvb3x489pw5c9iwYQODg4NRzvxfcskl0dtmy5Yt\nvOMd7wgeu7W1lUsuuYT+/v4oRenrX//6qG2TP6Yuv/zy4LFnz57NZZddRl9fH+vXrw8eX0REpJZY\nfhCfFWbmtZxzZ2cnzzzzDN3d3dx0003cc8893HzzzUHf45ZbbmF8fJwrr7wyaNxqcHf2798fdJnx\nQsPDw7h78NmuvP3799Pe3h78kqW8/v7+aG0zMjLC0aNHaWtrixI/y20zOjrK2NgYc+bMiRI/620z\nOjo66Z5AM8Pdw17XeIKo9X5KRKQevJR+SvcYBfayl72Mp59+mu7ubrZv3x7luR8xzgxXi5lFG8AB\ntLS0RIsNBF8UoVjMtom91HKW26a5uZnm5uZo8dU2IiIitU+X0gV26qmnsnXrVgBeeOEFenp6Us5I\nRERERESOR4VRYKeeeurEM1diLKktIiIiIiLhqTAK7LTTTpuYMdq0aRNnnHFGyhmJiIiIiMjxqDAK\nbM2aNTz22GMcPnyYvr6+4E+6FxERERGR8FQYBXbWWWexbds27r77btauXUtjo9a3EBERERGpdSqM\nAmtsbGTDhg1cffXVvOENb0g7HRERERERmQYVRhF85CMfYenSpVx99dVppyIiIiIiItOgB7yKiMiM\n6QGv5amfEhFJ30vppzRjJCIiIiIidU+FkYiIiIiI1D0VRiIiIiIiUvdUGImIiIiISN1TYSQiIiIi\nInVPhZGIiIiIiNQ9FUYiIiIiIlL3VBiJiIiIiEjdU2EkIiIiIiJ1T4VRFd13331pp1CRLOev3NOT\n5fyVu0hY2i/LU9uUp7YpT20TlgqjKsr6zpvl/JV7erKcv3IXCUv7ZXlqm/LUNuWpbcJSYSQiIiIi\nInVPhZGIiIiIiNQ9c/e0c5gRM8tWwiIiJyh3t7RzqEXqp0REasNM+6nMFUYiIiIiIiKh6VI6ERER\nERGpeyqMRERERESk7mWmMDKzS81sk5ltMbMPp53PTJjZMjP7kZk9aWaPm9kH0s5ppsxslpk9bGZ3\npJ3LTJlZh5l928yeSv4GF6ad03SZ2bVm9oSZPWZmXzez5rRzmoqZfcXMdprZYwXbuszsLjPbbGY/\nMLOONHMsp0zun0r2m0fM7FYza08zx3JK5V7wvf9qZuNmNj+N3OpB8edjVvb5akjaZmNB22TimKqG\ncv2qjtnSbWNm70/2ncfN7Lo080tTiWPqHDN7INn2czM7L+0c02Jmz5nZo/m2SLbN6PM4E4WRmc0C\n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\nRK5CYII=\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x112188048>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Explore behavior of DDP, driven damped pendulum as function of drive gamma\n",
    "# make side-by-side graphs\n",
    "# restart this notebook, and run %pylab inline to set figs inline again\n",
    "#%pylab inline\n",
    "\n",
    "wd=2*pi  # set drive freq to 2*pi, so that time is in units of drive period T\n",
    "w_0=1.5*wd  # set natural freq to 1.5 times drive freq, so that drive is close (but lower than) resonance\n",
    "beta = w_0/4\n",
    "#theta_0=-pi/2  # initial angle is neg pi/2\n",
    "theta_0=0  # initial angle is zero\n",
    "v_theta_0 = 0.0  # initial velocity is zero\n",
    "gamma=0.9\n",
    "\n",
    "t_max=100\n",
    "N=10000\n",
    "pts_per_sec=N/t_max\n",
    "skip=0.0*int(30*pts_per_sec)    # number of points in the beginning to skip when plotting.  set to zero for now.\n",
    "\n",
    "# fill time array\n",
    "time=linspace(0,t_max,N)\n",
    "\n",
    "# call odeint\n",
    "solution=odeint(DrivenDampedPendulum, [theta_0,v_theta_0], time, args=(beta, w_0, gamma, wd))\n",
    "# print(solution)\n",
    "\n",
    "# make a figure\n",
    "fig1=figure()\n",
    "\n",
    "#First axes on that figure.  Setting up a 1-row, 2-col table of subplots\n",
    "ax1=subplot(1,2,1)\n",
    "ax1.plot(time,solution[:,0],\"k-\",)\n",
    "#ax1.plot(time,solution[:,0]/(2*pi),\"k-\",time,solution[:,1]/max(solution[:,1]))\n",
    "\n",
    "ax1.set_xlabel(\"time (drive periods)\")\n",
    "ax1.set_ylabel(\"angle [radians] and velocity [arb units]\")\n",
    "ax1.set_xlim(0,15)\n",
    "#xlim(5,6)\n",
    "#xlim(40,50)\n",
    "\n",
    "#ax1.legend([\"angle\",\"velocity\"],title=\"$\\gamma$ = {:3}\".format(gamma))\n",
    "# put gamma in the title to this subplot.  \n",
    "ax1.set_title(\"$\\gamma$ = {:3}\".format(gamma))\n",
    "\n",
    "# for tick labels: sets the \"unit\" of pi that will be used to label, eg 1/4pi or 1/2pi or even 2pi\n",
    "# pi_fraction=2.\n",
    "pi_fraction=1/2.\n",
    "# here are the calls that set the tick label formatting\n",
    "ax1.yaxis.set_major_locator(MultipleLocator(pi_fraction*pi))\n",
    "ax1.yaxis.set_major_formatter(FuncFormatter(fractions_of_pi))\n",
    "\n",
    "# second set of axes\n",
    "ax2=subplot(1,2,2)\n",
    "ax2.plot(time,solution[:,0],\"k-\",)\n",
    "\n",
    "ax2.set_xlabel(\"time (drive periods)\")\n",
    "ax2.set_ylabel(\"angle [radians] and velocity [arb units]\")\n",
    "ax2.set_xlim(40,50)\n",
    "# here's an attempt to automate the ylim for zoomed plot.  Probably will have to adjust by hand\n",
    "ymin=min(solution[int(40*pts_per_sec):,0])\n",
    "if ymin<0:\n",
    "    ylow=1.1*ymin\n",
    "    yhi=0.9*ymin\n",
    "else:\n",
    "    ylow=0.9*ymin\n",
    "    yhi=1.1*ymin\n",
    "    \n",
    "ax2.set_ylim(ylow, yhi)\n",
    "\n",
    "# here are the calls that set the tick label formatting\n",
    "pi_fraction=1/4.\n",
    "ax2.yaxis.set_major_locator(MultipleLocator(pi_fraction*pi))\n",
    "ax2.yaxis.set_major_formatter(FuncFormatter(fractions_of_pi))\n",
    "\n",
    "# set the size of the figure in inches\n",
    "fig1.set_size_inches(14,5)\n",
    "\n",
    "# This displays an inline copy of fig if you happen to have started the notebook in \"pop-up\" mode\n",
    "#display(fig1)\n"
   ]
  },
  {
   "cell_type": "code",
>>>>>>> b919082f58874acffc6dcd399b6f5b74c488c230
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "def poincare(data,periodstep):\n",
    "    return data[0::periodstep]"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.5.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}
